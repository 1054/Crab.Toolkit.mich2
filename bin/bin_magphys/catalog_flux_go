#!/bin/bash
# 
# Aim: 
#      Easily extract flux from big catalog
#      Needs python
# 
# Usage:
#        /home/dzliu/Softwares/magphys/catalog_flux_go
# 



# 
# Prepare necessary functions
# 
# usage
usage() {
    echo "Usage: "
    echo "  $HOME/Softwares/magphys/catalog_flux_go -catalog aaa.cat -id 222"
    echo ""
}
# readlinkfull
readlinkfull() {
    if [[ $# -gt 1 ]]; then if [[ "$1" == "-f" ]]; then shift; fi; fi
    DIR=$(echo "${1%/*}"); (cd "$DIR" && echo "$(pwd -P)/$(basename ${1})")
}





























##########################################
#              MAIN PROGRAM              #
##########################################



# 
# Check directories and data files
# 
m_ScriptDir=$(dirname $(readlinkfull -f "${BASH_SOURCE[0]}"))



# 
# Check user input WaveData and FluxData
# 
m_Catalogue=""
m_SourceIDs=()
m_Input_ArgType="N/A"

while [[ $# -gt 0 ]]; do
    
    TempStr=$(echo "$1" | tr '[:lower:]' '[:upper:]')
    TempCmd=""
    
    case "$TempStr" in
                    
             "-ID") TempCmd="$1"; shift
                    m_Input_ArgType="SourceIDs"
                    ;;
                    
           "-CAT"*) TempCmd="$1"; shift
                    m_Input_ArgType="Catalogue"
                    ;;
                    
                 *) #echo "$1"
                    #shift
                    
    esac
    
    case "$m_Input_ArgType" in
                                        
                           "SourceIDs") 
                                        # check followed argument
                                        if [[ $# -ge 1 ]]; then
                                            m_SourceIDs+=("$1")
                                        else
                                            echo ""
                                            echo "Error! Input argument $TempCmd should be followed with at least 1 argument!"
                                            echo ""
                                            exit 1
                                        fi
                                        shift
                                        ;;
                                        
                           "Catalogue") 
                                        # check followed argument
                                        if [[ $# -ge 1 ]]; then
                                            m_Catalogue="$1"
                                        else
                                            echo ""
                                            echo "Error! Input argument $TempCmd should be followed with 1 argument!"
                                            echo ""
                                            exit 1
                                        fi
                                        shift
                                        ;;
                                        
                                 "N/A") 
                                        # check followed argument
                                        m_Input_ArgType="N/A"
                                        shift
                                        ;;
                                        
                                     *) #echo "$1"
                                        shift
                                        
    esac
    
done

if [[ -z "$m_Catalogue" && ${#SourceIDs[@]} -eq 0 ]]; then
    usage
    exit
fi






# 
# Prepare outdir
# 
m_OutputDir="$(pwd -P)/catalog_flux"

# 
# Backup outdir
# 
if [[ -d "$m_OutputDir" ]]; then
    if [[ -d "$m_OutputDir.backup" ]]; then
        if [[ -d "$m_OutputDir.backup.backup" ]]; then
            rm -rf "$m_OutputDir.backup.backup"
        fi
        mv "$m_OutputDir.backup" "$m_OutputDir.backup.backup"
    fi
    mv "$m_OutputDir" "$m_OutputDir.backup"
fi

# 
# Make outdir
# 
if [[ ! -d "$m_OutputDir" ]]; then
    mkdir -p "$m_OutputDir"
fi






# 
# Prepare python code
# 
# use different methods for different types of catalog
# 
if [[ $(echo "$m_Catalogue" | tr '[:lower:]' '[:upper:]') == *".FITS" ]]; then
    if [[ -f "$m_ScriptDir/catalog_flux_go_fits.py" ]]; then
        chmod +x "$m_ScriptDir/catalog_flux_go_fits.py"
        echo "# $m_ScriptDir/catalog_flux_go_fits.py" "$m_Catalogue" "${m_SourceIDs[@]}"
        "$m_ScriptDir/catalog_flux_go_fits.py" "$m_Catalogue" "${m_SourceIDs[@]}"
    fi
    #echo "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "#!/usr/bin/env python2.7"             >  "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "#"                                    >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "import os, sys, numpy, astropy"       >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #echo "" >> "$m_OutputDir/run_extract_catalog_flux.py"
    #chmod +x "$m_OutputDir/run_extract_catalog_flux.py"
    #"$m_OutputDir/run_extract_catalog_flux.py"
fi


































