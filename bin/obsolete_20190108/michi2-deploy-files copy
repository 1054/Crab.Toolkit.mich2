#!/bin/bash
#

# 
# readlink for Mac (because Mac readlink does not accept "-f" option)
# 
if [[ $(uname) == *"Darwin"* ]]; then
    function readlink() {
        if [[ $# -gt 1 ]]; then if [[ "$1" == "-f" ]]; then shift; fi; fi
        DIR="$1"; if [[ "$DIR" != *"/"* ]]; then DIR="./$DIR"; fi # 20170228: fixed bug: path without "/"
        DIR=$(echo "${DIR%/*}") # 20160410: fixed bug: source SETUP just under the Softwares dir
        if [[ -d "$DIR" ]]; then cd "$DIR" && echo "$(pwd -P)/$(basename ${1})"; 
        else echo "$(pwd -P)/$(basename ${1})"; fi
    }
fi



# 
# Main program
# 
deploy_current_dir=$(pwd)
deploy_script_dir=$(readlink -f $(dirname "${BASH_SOURCE[0]}"))
deploy_upper_dir=$(readlink -f $(dirname "${deploy_script_dir}"))

echo "Welcome"
echo "Deploying michi2 into ${deploy_current_dir} ..."
#sleep 0.25

# 
# Type of fitting
# 
deploy_type="SED"
if [[ $# -ge 1 ]]; then
    deploy_type="$1"
fi

# 
# Function
# 
function check_input_contains() {
    if [[ $# -gt 0 ]]; then
        for (( i = 1; i < $#; i++ )); do
            input_arg=$(echo "${!i}" | tr '[:upper:]' '[:lower:]')
            if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e "s/.*\b(${input_arg})\b.*/\1/g") == "${input_arg}" ]]; then
                echo "yes"
                return 0
            fi
        done
    fi
    echo "no"
    return -1
}

# 
# Copy files
# 
if echo "$deploy_type" | grep -q -i "SED"; then
    #cp "${deploy_upper_dir}/data/deploy_michi2"/*.sm "${deploy_upper_dir}/data/deploy_michi2"/run*.sh .
    #cp "${deploy_upper_dir}/data/deploy_SED"/run*.sh .
    #cp "${deploy_upper_dir}/data/deploy_SED"/run*.sm .
    #cp "${deploy_upper_dir}/data/deploy_SED"/pChisq.sm .
    #cp "${deploy_upper_dir}/data/deploy_SED"/rShift.sm .
    #cp "${deploy_upper_dir}/data/deploy_SED"/rUmean.sm .
    #cp "${deploy_upper_dir}/data/deploy_SED"/rChisq.sm .
    cp -r "${deploy_upper_dir}/data/deploy_SED"/filters .
    cp -r "${deploy_upper_dir}/data/deploy_SED"/filter.list .
    # 
    if [[ $(check_input_contains "BC03") == "no" ]] && \
       [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(no stellar)\b.*/\1/g') != "no stellar" ]]; then
        # if user has not input "no stellar" or "no star", then we copy stellar SED libraries
        if [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "FSPS SSP" | wc -l) -eq 1 ]]; then
            # "FSPS SSP"
            unzip -o "${deploy_upper_dir}/data/lib_SED/FSPS.Padova.BaSeL.Z0.0190.EBV.lib.zip"
        elif [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "FSPS" | wc -l) -eq 1 ]]; then
            # "FSPS" tau-decline at 1Gyr
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.FSPS.CSP.tau.1Gyr.Padova.BaSeL.Z0.0190.EBV.SED.zip"
        elif [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "BC03" | wc -l) -eq 1 ]] && \
             [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "MultiAge" | wc -l) -eq 1 ]]; then
            # "BC03 MultiAge"
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.BC03.Padova1994.BaSeL.Z0.0190.MultiAge.EBV.SED.zip"
        elif [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "BC03" | wc -l) -eq 1 ]] && \
             [[ $(echo "$@" | sed -e 's/-/ /g' | tr -s ' ' | grep -i "400Myr" | wc -l) -eq 1 ]]; then
            # "BC03 MultiAge"
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.BC03.Padova1994.BaSeL.Z0.0190.ConstSFH.Age400Myr.EBV.SED.zip"
        else
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.BC03.Padova1994.BaSeL.Z0.0190.EBV.SED.zip" # default is BC03 single age 200Myr
        fi
    fi
    # 
    if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(no dust)\b.*/\1/g') != "no dust" ]]; then
        if [[ $(echo "$@" | tr -s ' ' | tr '[:lower:]' '[:upper:]' | perl -p -e 's/.*\b(MBB)\b.*/\1/g') == "MBB" ]]; then
            cp "${deploy_upper_dir}/data/make_lib_SED/02_Make_Lib_SED/ModifiedBlackbody/lib.MBB.SED" .
        elif [[ $(echo "$@" | tr -s ' ' | tr '[:lower:]' '[:upper:]' | perl -p -e 's/.*\b(DL07UPD2010)\b.*/\1/g') == "DL07UPD2010" ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.DL07UPD2010.DuoCom.SED.zip"
        elif [[ $(echo "$@" | tr -s ' ' | tr '[:lower:]' '[:upper:]' | perl -p -e 's/.*\b(SINGLEPAH)\b.*/\1/g') == "SINGLEPAH"* ]] || \
             [[ $(echo "$@" | tr -s ' ' | tr '[:lower:]' '[:upper:]' | perl -p -e 's/.*\b(SINGLE PAH)\b.*/\1/g') == "SINGLE PAH"* ]] || \
             [[ $(echo "$@" | tr -s ' ' | tr '[:lower:]' '[:upper:]' | perl -p -e 's/.*\b(SINGLE QPAH)\b.*/\1/g') == "SINGLE QPAH"* ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/DL07.DuoCom.SinglePAH.lib.zip"
        else
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.DL07.DuoCom.SED.zip" # default
        fi
    fi
    # 
    if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(no agn)\b.*/\1/g') != "no agn" ]]; then
        if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(siebenmorgen)\b.*/\1/g') == "siebenmorgen" ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.SiebenmorgenAGN.Extrapolated.SED.zip"
        elif [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(mullaney|mullaneyagn|mullaney2010)\b.*/\1/g') == "mullaney"* ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.MullaneyAGN.SED.zip"
        else
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.MullaneyAGN.SED.zip" # default
        fi
    fi
    # 
    if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(no radio)\b.*/\1/g') != "no radio" ]]; then
        if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(radio[\._ ]?varied[\._ ]?slope)\b.*/radiovariedslope/g') == "radiovariedslope" ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.RadioPowerlaw.Varied.Slope.SED.zip"
        elif [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(radio)\b.*/\1/g') == "radio" ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.RadioPowerlaw.Single.SED.zip"
        else
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.RadioPowerlaw.Single.SED.zip" # default
        fi
    fi
    # 
    if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(no co)\b.*/\1/g') != "no co" ]]; then
        if [[ $(echo "$@" | tr -s ' ' | tr '[:upper:]' '[:lower:]' | perl -p -e 's/.*\b(co)\b.*/\1/g') == "co" ]]; then
            unzip -o "${deploy_upper_dir}/data/lib_SED/lib.Radio.mm.FIR.lines.SED.zip"
        fi
    fi
    # 
    #echo "#!/bin/bash" > "run_fitting_5_components.sh"
    #echo "#" >> "run_fitting_5_components.sh"
    #echo "$(dirname ${BASH_SOURCE[0]})/michi2-run-fitting-5-components \$@" >> "run_fitting_5_components.sh"
    #chmod +x "run_fitting_5_components.sh"
    # 
    #echo "#!/bin/bash" > "run_plotting_5_components.sh"
    #echo "#" >> "run_plotting_5_components.sh"
    #echo "$(dirname ${BASH_SOURCE[0]})/michi2-plot-results-of-fitting-5-components \$@" >> "run_plotting_5_components.sh"
    #chmod +x "run_plotting_5_components.sh"
    # 
elif echo "$deploy_type" | grep -q -i "LVG"; then
    cp "${deploy_upper_dir}/data/deploy_LVG"/*.sm "${deploy_upper_dir}/data/deploy_LVG"/run*.sh .
    cp "${deploy_upper_dir}/data/lib_LVG/"lib_*.lvg .
fi
#if [[ $(uname) == "Darwin" ]]; then
#    echo "Mac!"; sleep 1.0
#    #cp "${deploy_upper_dir}/bin/michi2_v03_20160727mac" .
#    #ln -fs "michi2_v03_20160727mac" michi2_v03
#    #cp "${deploy_upper_dir}/bin/michi2_v04_20171002_0621_mac" .
#    #ln -fs "michi2_v04_20171002_0621_mac" michi2_v04
#    #cp "${deploy_upper_dir}/bin/michi2_v04_20180110_mac" .
#    #ln -fs "michi2_v04_20180110_mac" michi2_v04
#    cp "${deploy_upper_dir}/bin/michi2_v04_20180111_mac" .
#    ln -fs "michi2_v04_20180111_mac" michi2_v04
#    chmod +x michi2_v04
#else
#    cp "${deploy_upper_dir}/bin/michi2_v04_20180110_linux_x86_64" .
#    ln -fs "michi2_v04_20180110_linux_x86_64" michi2_v04
#    chmod +x michi2_v04
#fi

#ln -fs "run_plotting_quintuple.sm" "run_plotting.sm"


