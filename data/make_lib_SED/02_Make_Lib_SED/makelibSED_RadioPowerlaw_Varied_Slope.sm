makelibSED_RadioPowerlaw_Varied_Slope
    # 
    # Usage:
    #     sm
    #     macro read makelibSED_RadioPowerlaw_Varied_Slope.sm makelibSED_RadioPowerlaw_Varied_Slope
    #     
    # 
    set pradios = 0.0,1.0,0.2
    set wradio = 1.5,6.5,0.05
    set lambda = 10**wradio
    # 
    # 
    !echo -n "We will make "$(dimen(pradios)*$(dimen(wradio)))' items for lib.RadioPowerlaw.Varied.Slope.SED, '
    define OK ?
    if(!$OK){
        echo Abort by user. 
        return
    }
    # 
    # 
    writeLibHead "lib.RadioPowerlaw.Varied.Slope.SED"
    # 
    # 
    define print_noheader 1
    foreach pradio pradios {
        set pradio = float($pradio)
        set fradio = ((lambda)/2e5)**pradio # normalize to f20cm = 1 mJy. 
        # 
        set powerindex = lambda>0 ? pradio : pradio # make it an array
        print +"lib.RadioPowerlaw.Varied.Slope.SED" '%15.6e%15.6e%15.1f\n' <lambda fradio powerindex>
    }
    define print_noheader 0
    # 
    # 
    echo "Output to lib.RadioPowerlaw.Varied.Slope.SED!"



writeLibHead 01
    # 
    # 
    # 
    !date +"\#\ %Y-%m-%d\ %H:%M:%S" > $1
    print +$1 '\# NVAR  = 2 \# Variable X Y\n' {}
    print +$1 '\# TVAR1 = band wavelengths (rest-frame) (lambda) [um]\n' {}
    print +$1 '\# TVAR2 = flux, in unit of mJy, normalized to f20cm=1mJy\n' {}
    print +$1 '\# CVAR1 = 1 \# the colomn number of VAR1\n' {}
    print +$1 '\# CVAR2 = 2 \# the colomn number of VAR2\n' {}
    print +$1 '\# NVAR1 = $(dimen(wradio)) \# NAXIS1\n' {}
    print +$1 '\# NVAR2 = $(dimen(pradios)) \# NAXIS2 = product of all NPARs\n' {}
    print +$1 '\# NPAR  = 1 \# Parameter 1 2 3 ...\n' {}
    print +$1 '\# TPAR1 = POWER_INDEX\n' {}
    print +$1 '\# NPAR1 = $(dimen(pradios))\n' {}
    print +$1 '\# CPAR1 = 3\n' {}
    print +$1 '\# \n' {}
    print +$1 '\#        lambda           flux     powerindex\n' {}
    print +$1 '\#          [um]          [mJy]               \n' {}
    return


